name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'

      - name: Setup Dart SDK
      # You may pin to the exact commit or the version.
      #dart-lang/setup-dart@v1.6.4
      # uses:
        uses: dart-lang/setup-dart@f0ead981b4d9a35b37f30d36160575d60931ec30
        with:
      # This can be either the channel to install (i.e., 'stable', 'beta', 'dev'), an SDK release version (i.e., '2.19', '3.1'), or a specific SDK version (i.e, '2.19.1', '3.0.0-1.4.beta').
          sdk: '3.0.0'
      # The CPU architecture ('x64', 'ia32', 'arm', or 'arm64').
          architecture: 'x64'
      # The build flavor ('release' or 'raw').
          flavor: 'raw'


      
          

      - name: Verify Flutter and Dart Versions
        run: |
          flutter --version
          dart --version
          
      - name: dart-problem-matcher
      # You may pin to the exact commit or the version.
      # uses: leancodepl/dart-problem-matcher@db2c48534f89233ae58cb81a45ebc8fd21d90bff
        uses: leancodepl/dart-problem-matcher@db2c48534f89233ae58cb81a45ebc8fd21d90bff
          #leancodepl/dart-problem-matcher@0.0.2

      - name: Install Flutter dependencies
        run: flutter pub get --verbose  # verbose 추가

      - name: Build and Test Spring demo
        run: |
          ./mvnw clean install

      - name: Install and Build Dart Frontend
        run: | 
          flutter pub get
          flutter build

      - name: Run Dart Tests
        run: |
          flutter test

