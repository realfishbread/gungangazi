name: CI/CD Pipeline

on: 
  push:
    branches:
      - successful-build
  pull_request:
    branches:
      - successful-build

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: endbackend!
          MYSQL_DATABASE: appdb
          MYSQL_USER: yh
          MYSQL_PASSWORD: endbackend!
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clear old builds
        run: rm -rf build/

      - name: Install Flutter SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip xz-utils
          curl -LO https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.0-stable.tar.xz
          tar xf flutter_linux_3.24.0-stable.tar.xz
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          echo "$PWD/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          export PATH="$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH"
          flutter doctor

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Install dependencies
        run: |
          export PATH="$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH"
          flutter pub get --verbose

      - name: Clear cache
        run: flutter clean
        
      - name: Build Flutter web app
        run: |
          export PATH="$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH"
          flutter build web --release

      - name: Install MySQL Client
        run: sudo apt-get install -y mysql-client

      - name: Build and Test Spring demo
        run: ./mvnw clean install

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > GUNGANGAZI.pem
          chmod 600 GUNGANGAZI.pem
          scp -o StrictHostKeyChecking=no -i GUNGANGAZI.pem -r build/web/* ubuntu@ec2-15-164-140-55.ap-northeast-2.compute.amazonaws.com:/var/www/myapp
           # Deploy Spring Boot API
          scp -o StrictHostKeyChecking=no -i GUNGANGAZI.pem -r target/*.jar ubuntu@ec2-15-164-140-55.ap-northeast-2.compute.amazonaws.com:/home/ubuntu/myapp/
          ssh -o StrictHostKeyChecking=no -i GUNGANGAZI.pem ubuntu@ec2-15-164-140-55.ap-northeast-2.compute.amazonaws.com 'sudo systemctl restart nginx && nohup java -jar /home/ubuntu/myapp/*.jar > /dev/null 2>&1 &'

      - name: Cleanup
        run: rm -f GUNGANGAZI.pem
