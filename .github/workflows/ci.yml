name: CI/CD Pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Flutter SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip xz-utils
          curl -LO https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.0-stable.tar.xz
          tar xf flutter_linux_3.24.0-stable.tar.xz
          export PATH="$PATH:$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin"
          flutter doctor

      - name: Install Dart SDK
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https
          sudo sh -c 'wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /usr/share/keyrings/dart-archive-keyring.gpg'
          sudo sh -c 'wget -qO- https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'
          sudo apt-get update
          sudo apt-get install dart

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Install dependencies
        run: flutter pub get --verbose

      - name: Build and Test Spring demo
        run: ./mvnw clean install

      - name: Run Flutter tests
        run: flutter test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host to known_hosts
        run: |
          ssh-keyscan ec2-13-124-3-87.ap-northeast-2.compute.amazonaws.com >> ~/.ssh/known_hosts

      - name: Copy files to EC2
        run: |
          scp -r ./build/web/* ubuntu@ec2-13-124-3-87.ap-northeast-2.compute.amazonaws.com:/var/www/html/

      - name: Restart Nginx
        run: |
          ssh ubuntu@ec2-13-124-3-87.ap-northeast-2.compute.amazonaws.com << 'EOF'
            sudo systemctl restart nginx
          EOF
