name: CI/CD Pipeline

on: 
  push:
    branches:
      - successful-build
  pull_request:
    branches:
      - successful-build

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0  # MySQL 8.0 버전 사용
        env:
          MYSQL_ROOT_PASSWORD: endbackend!  # 루트 비밀번호 설정
          MYSQL_DATABASE: appdb  # 사용할 데이터베이스 이름 설정
          MYSQL_USER: gungangazi  # 사용자 생성
          MYSQL_PASSWORD: endbackend!  # 사용자 비밀번호 설정
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3


    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'


      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Set up environment
        run: |
          echo 'export PATH="$PATH:$HOME/flutter/bin"' >> $GITHUB_ENV
      - run: flutter pub get
      - run: flutter build web 
     

     

      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Build and Test Spring demo
        run: ./mvnw clean install



  deploy:
    runs-on: ubuntu-latest
    needs: build  

    steps:
      - uses: actions/checkout@v4



      - name: Deploy to EC2
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > GUNGANGAZI.pem
          chmod 600 GUNGANGAZI.pem
          scp -o StrictHostKeyChecking=no -i GUNGANGAZI.pem -r ./build/web/* ubuntu@ec2-15-164-140-55.ap-northeast-2.compute.amazonaws.com:/var/www/html/
          ssh -o StrictHostKeyChecking=no -i GUNGANGAZI.pem ubuntu@ec2-15-164-140-55.ap-northeast-2.compute.amazonaws.com 'sudo systemctl restart nginx && nohup java -jar /var/app/*.jar > /dev/null 2>&1 &'
      - name: Cleanup
        run: rm -f GUNGANGAZI.pem

